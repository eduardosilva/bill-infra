services:
  authentik-db:
    image: docker.io/bitnami/postgresql:17
    restart: always
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 10s   # Check every 10 seconds
      timeout: 5s     # Wait up to 5 seconds for a response
      retries: 5      # Retry 5 times before marking as unhealthy
    container_name: authentik-db
    environment:
      - POSTGRESQL_DATABASE=authentik
      - POSTGRESQL_PASSWORD=authentik
      - POSTGRESQL_USERNAME=authentik
    volumes:
      - 'authentik_db_data:/bitnami/postgresql'
    networks:
      - authentik

  # Redis for caching (required by Authentik)
  authentik-redis:
    image: docker.io/bitnami/keydb:6
    container_name: authentik-redis
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "keydb-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 5s
    environment:
      - ALLOW_EMPTY_PASSWORD=yes
    volumes:
      - authentik_redis_data:/data
    networks:
      - authentik

  authentik-worker:
    image: ghcr.io/goauthentik/server:2024.12.3
    restart: unless-stopped
    container_name: authentik-worker
    command: worker
    environment:
      AUTHENTIK_POSTGRESQL__HOST: authentik-db
      AUTHENTIK_POSTGRESQL__NAME: authentik
      AUTHENTIK_POSTGRESQL__PASSWORD: authentik
      AUTHENTIK_POSTGRESQL__USER: authentik
      AUTHENTIK_REDIS__HOST: authentik-redis
      AUTHENTIK_SECRET_KEY: ${AUTHENTIK_SECRET_KEY}
    user: root
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
      - ./.authentik/media:/media
      - ./.authentik/certs:/certs
      - ./.authentik/custom-templates:/templates
    depends_on:
      authentik-db:
        condition: service_healthy  
      authentik-redis:
        condition: service_healthy 
    networks:
      - authentik

  # authentik (Identity and Access Management)
  authentik:
    image: ghcr.io/goauthentik/server:2024.12.3
    restart: unless-stopped
    container_name: authentik
    command: server
    environment:
      AUTHENTIK_POSTGRESQL__HOST: authentik-db
      AUTHENTIK_POSTGRESQL__NAME: authentik
      AUTHENTIK_POSTGRESQL__PASSWORD: authentik
      AUTHENTIK_POSTGRESQL__USER: authentik
      AUTHENTIK_REDIS__HOST: authentik-redis
      AUTHENTIK_SECRET_KEY: ${AUTHENTIK_SECRET_KEY}
    depends_on:
      authentik-db:
        condition: service_healthy  
      authentik-redis:
        condition: service_healthy  
    volumes:
      - authentik_media:/media
      - authentik_static:/static
    networks:
      - authentik
      - proxy

networks:
  authentik:
    driver: bridge
  proxy:
    external: true

volumes:
  authentik_db_data:
  authentik_media:
  authentik_redis_data:
  authentik_static:
